'use client'

import { useState, useEffect } from 'react'
import Layout from '@/components/Layout'
import Tabs from '@/components/ui/Tabs'
import FileUpload from '@/components/ui/FileUpload'
import { ToastContainer } from '@/components/ui/Toast'

export const dynamic = 'force-dynamic'

// –¢–∏–ø—ã –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
const REPORT_TYPES = {
  ozon: [
    {
      id: 'orders',
      title: '–ó–∞–∫–∞–∑—ã Ozon',
      description: '–û—Ç—á–µ—Ç –ø–æ –∑–∞–∫–∞–∑–∞–º —Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ Ozon',
      acceptedTypes: ['.csv'],
      multiple: false,
      icon: (
        <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
        </svg>
      )
    },
    {
      id: 'products',
      title: 'üìÑ –¢–æ–≤–∞—Ä—ã Ozon (CSV)',
      description: '–û—Ç—á–µ—Ç –ø–æ —Ç–æ–≤–∞—Ä–∞–º –∏ –∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º (CSV —Ñ–æ—Ä–º–∞—Ç, –ª–∏—Å—Ç &quot;–¢–æ–≤–∞—Ä—ã –∏ —Ü–µ–Ω—ã&quot;)',
      acceptedTypes: ['.csv'],
      multiple: false,
      icon: (
        <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
        </svg>
      )
    },
    {
      id: 'full-products',
      title: 'üìä –ü–æ–ª–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã Ozon (Excel)',
      description: '–ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ç–æ–≤–∞—Ä–∞–º (Excel —Ñ–∞–π–ª—ã —Å –ª–∏—Å—Ç–∞–º–∏: &quot;–®–∞–±–ª–æ–Ω&quot;, &quot;–û–∑–æ–Ω.–í–∏–¥–µ–æ&quot;, &quot;–û–∑–æ–Ω.–í–∏–¥–µ–æ–æ–±–ª–æ–∂–∫–∞&quot;)',
      acceptedTypes: ['.xlsx'],
      multiple: true,
      icon: (
        <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
        </svg>
      )
    },
    {
      id: 'barcodes',
      title: '–®—Ç—Ä–∏—Ö–∫–æ–¥—ã Ozon',
      description: '–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —à—Ç—Ä–∏—Ö–∫–æ–¥–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤',
      acceptedTypes: ['.xlsx'],
      multiple: false,
      icon: (
        <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V4a1 1 0 00-1-1H5a1 1 0 00-1 1v3a1 1 0 001 1zm12 0h2a1 1 0 001-1V4a1 1 0 00-1-1h-2a1 1 0 00-1 1v3a1 1 0 001 1zM5 20h2a1 1 0 001-1v-3a1 1 0 00-1-1H5a1 1 0 00-1 1v3a1 1 0 001 1z" />
        </svg>
      )
    }
  ],
  wildberries: [
    {
      id: 'wb-products',
      title: '–¢–æ–≤–∞—Ä—ã Wildberries',
      description: '–û—Ç—á–µ—Ç –ø–æ —Ç–æ–≤–∞—Ä–∞–º Wildberries (–º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤)',
      acceptedTypes: ['.xlsx'],
      multiple: true,
      icon: (
        <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
        </svg>
      )
    },
    {
      id: 'wb-prices',
      title: '–¶–µ–Ω—ã Wildberries',
      description: '–û—Ç—á–µ—Ç –ø–æ —Ü–µ–Ω–∞–º –∏ —Å–∫–∏–¥–∫–∞–º',
      acceptedTypes: ['.xlsx'],
      multiple: false,
      icon: (
        <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
      )
    }
  ]
}

interface UploadStats {
  successful: number
  errors: number
  totalRecords: number
}

interface UploadHistory {
  id: number
  reportType: string
  fileName: string
  status: string
  recordsCount?: number
  errorMessage?: string
  createdAt: string
  completedAt?: string
}

interface RecentErrors {
  reportType: string
  fileName: string
  errorMessage: string
  timestamp: string
}

export default function ImportPage() {
  const [activeTab, setActiveTab] = useState('ozon')
  const [uploadStats, setUploadStats] = useState<UploadStats>({
    successful: 0,
    errors: 0,
    totalRecords: 0
  })
  const [uploadHistory, setUploadHistory] = useState<UploadHistory[]>([])
  const [recentErrors, setRecentErrors] = useState<RecentErrors[]>([])
  const [isLoading, setIsLoading] = useState(true)

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–≥—Ä—É–∑–æ–∫
  const fetchUploadData = async () => {
    try {
      const response = await fetch('/api/upload')
      if (response.ok) {
        const data = await response.json()
        if (data.success && data.data) {
          setUploadHistory(data.data)
          
          // –í—ã—á–∏—Å–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
          const stats = data.data.reduce((acc: UploadStats, upload: UploadHistory) => {
            if (upload.status === 'completed') {
              acc.successful++
              acc.totalRecords += upload.recordsCount || 0
            } else if (upload.status === 'failed') {
              acc.errors++
            }
            return acc
          }, { successful: 0, errors: 0, totalRecords: 0 })
          
          setUploadStats(stats)
          
          // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
          const errors = data.data
            .filter((upload: UploadHistory) => upload.status === 'failed' && upload.errorMessage)
            .slice(0, 5) // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –æ—à–∏–±–æ–∫
            .map((upload: UploadHistory) => ({
              reportType: upload.reportType,
              fileName: upload.fileName,
              errorMessage: upload.errorMessage || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
              timestamp: upload.createdAt
            }))
          
          setRecentErrors(errors)
        }
      }
    } catch (error) {
      console.error('Error fetching upload data:', error)
    } finally {
      setIsLoading(false)
    }
  }

  useEffect(() => {
    fetchUploadData()
  }, [])

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
  const handleFileUpload = async (reportId: string, files: FileList) => {
    // Map frontend report IDs to backend report types
    const reportTypeMap: Record<string, string> = {
      'orders': 'ozon_orders',
      'products': 'ozon_products',
      'full-products': 'ozon_category_products',
      'barcodes': 'ozon_barcodes',
      'wb-products': 'wb_products',
      'wb-prices': 'wb_prices'
    }
    
    const backendReportType = reportTypeMap[reportId] || reportId
    console.log(`Uploading ${backendReportType}:`, Array.from(files).map(f => f.name))
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    await fetchUploadData()
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç—ã –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞
  const getLastUploadDate = (reportId: string): string | null => {
    const reportTypeMap: Record<string, string> = {
      'orders': 'ozon_orders',
      'products': 'ozon_products',
      'full-products': 'ozon_category_products',
      'barcodes': 'ozon_barcodes',
      'wb-products': 'wb_products',
      'wb-prices': 'wb_prices'
    }
    
    const backendType = reportTypeMap[reportId]
    const lastUpload = uploadHistory
      .filter(upload => upload.reportType === backendType && upload.status === 'completed')
      .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())[0]
    
    return lastUpload ? lastUpload.createdAt : null
  }

  const tabs = [
    {
      id: 'ozon',
      label: 'Ozon',
      icon: (
        <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
        </svg>
      )
    },
    {
      id: 'wildberries',
      label: 'Wildberries',
      icon: (
        <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 3H3m4 10v6a1 1 0 001 1h12a1 1 0 001-1v-6M7 13v-2a1 1 0 011-1h8a1 1 0 011 1v2m-9 4h.01M18 17h.01" />
        </svg>
      )
    }
  ]

  const renderReportCards = (reportTypes: typeof REPORT_TYPES.ozon) => {
    return (
      <div className="grid gap-6 md:grid-cols-1 lg:grid-cols-2">
        {reportTypes.map((report) => (
          <FileUpload
            key={report.id}
            title={report.title}
            description={report.description}
            acceptedTypes={report.acceptedTypes}
            multiple={report.multiple}
            lastUploadDate={getLastUploadDate(report.id)}
            onUpload={(files) => handleFileUpload(report.id, files)}
            icon={report.icon}
          />
        ))}
      </div>
    )
  }

  return (
    <Layout>
      <div className="px-4 py-6 sm:px-0">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900">–ò–º–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–æ–≤</h1>
          <p className="text-gray-600 mt-2">
            –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—á–µ—Ç–æ–≤ —Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ Ozon –∏ Wildberries
          </p>
          
          {/* Quick Guide for File Types */}
          <div className="mt-4 p-4 bg-yellow-50 border-l-4 border-yellow-400 rounded-r-lg">
            <div className="flex">
              <div className="flex-shrink-0">
                <svg className="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clipRule="evenodd" />
                </svg>
              </div>
              <div className="ml-3">
                <h3 className="text-sm font-medium text-yellow-800">
                  –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø –∏–º–ø–æ—Ä—Ç–∞ –¥–ª—è –≤–∞—à–∏—Ö —Ñ–∞–π–ª–æ–≤:
                </h3>
                <div className="mt-2 text-sm text-yellow-700">
                  <div className="grid md:grid-cols-2 gap-4">
                    <div className="flex items-center space-x-2">
                      <span className="text-lg">üìÑ</span>
                      <div>
                        <strong>CSV —Ñ–∞–π–ª—ã</strong> ‚Üí &quot;–¢–æ–≤–∞—Ä—ã Ozon (CSV)&quot;
                        <br />
                        <span className="text-xs">—Å–æ–¥–µ—Ä–∂–∞—Ç –ª–∏—Å—Ç &quot;–¢–æ–≤–∞—Ä—ã –∏ —Ü–µ–Ω—ã&quot;</span>
                      </div>
                    </div>
                    <div className="flex items-center space-x-2">
                      <span className="text-lg">üìä</span>
                      <div>
                        <strong>Excel —Ñ–∞–π–ª—ã</strong> ‚Üí &quot;–ü–æ–ª–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã Ozon (Excel)&quot;
                        <br />
                        <span className="text-xs">—Å–æ–¥–µ—Ä–∂–∞—Ç –ª–∏—Å—Ç—ã &quot;–®–∞–±–ª–æ–Ω&quot;, &quot;–û–∑–æ–Ω.–í–∏–¥–µ–æ&quot;</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <div className="bg-white overflow-hidden shadow rounded-lg">
            <div className="p-5">
              <div className="flex items-center">
                <div className="flex-shrink-0">
                  <svg className="h-6 w-6 text-green-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </div>
                <div className="ml-5 w-0 flex-1">
                  <dl>
                    <dt className="text-sm font-medium text-gray-500 truncate">
                      –£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫
                    </dt>
                    <dd className="text-lg font-medium text-gray-900">{isLoading ? '...' : uploadStats.successful}</dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-white overflow-hidden shadow rounded-lg">
            <div className="p-5">
              <div className="flex items-center">
                <div className="flex-shrink-0">
                  <svg className="h-6 w-6 text-yellow-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
                  </svg>
                </div>
                <div className="ml-5 w-0 flex-1">
                  <dl>
                    <dt className="text-sm font-medium text-gray-500 truncate">
                      –û—à–∏–±–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏
                    </dt>
                    <dd className="text-lg font-medium text-gray-900">{isLoading ? '...' : uploadStats.errors}</dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-white overflow-hidden shadow rounded-lg">
            <div className="p-5">
              <div className="flex items-center">
                <div className="flex-shrink-0">
                  <svg className="h-6 w-6 text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 12l2 2 4-4" />
                  </svg>
                </div>
                <div className="ml-5 w-0 flex-1">
                  <dl>
                    <dt className="text-sm font-medium text-gray-500 truncate">
                      –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π
                    </dt>
                    <dd className="text-lg font-medium text-gray-900">{isLoading ? '...' : uploadStats.totalRecords.toLocaleString()}</dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Recent Errors Section */}
        {recentErrors.length > 0 && (
          <div className="bg-white shadow rounded-lg p-6 mb-8">
            <div className="flex items-center justify-between mb-4">
              <h2 className="text-lg font-medium text-gray-900 flex items-center">
                <svg className="h-5 w-5 text-red-400 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
              </h2>
              <span className="text-sm text-gray-500">
                {recentErrors.length} –æ—à–∏–±–æ–∫
              </span>
            </div>
            <div className="space-y-3">
              {recentErrors.map((error, index) => (
                <div key={index} className="border border-red-200 rounded-lg p-4 bg-red-50">
                  <div className="flex justify-between items-start">
                    <div className="flex-1">
                      <div className="flex items-center">
                        <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                          {error.reportType}
                        </span>
                        <span className="ml-2 text-sm font-medium text-gray-900">
                          {error.fileName}
                        </span>
                      </div>
                      <p className="mt-2 text-sm text-red-700">
                        {error.errorMessage}
                      </p>
                    </div>
                    <div className="ml-4 text-xs text-gray-500">
                      {new Date(error.timestamp).toLocaleDateString('ru-RU', {
                        day: '2-digit',
                        month: '2-digit',
                        hour: '2-digit',
                        minute: '2-digit'
                      })}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* Tabs and Content */}
        <div className="bg-white shadow rounded-lg p-6">
          <Tabs
            tabs={tabs}
            activeTab={activeTab}
            onTabChange={setActiveTab}
          >
            {activeTab === 'ozon' && (
              <div className="space-y-6">
                <div className="border-l-4 border-blue-400 bg-blue-50 p-4">
                  <div className="flex">
                    <div className="flex-shrink-0">
                      <svg className="h-5 w-5 text-blue-400" viewBox="0 0 20 20" fill="currentColor">
                        <path fillRule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clipRule="evenodd" />
                      </svg>
                    </div>
                    <div className="ml-3">
                      <p className="text-sm text-blue-700">
                        <strong>–í–∞–∂–Ω–æ:</strong> –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø –∏–º–ø–æ—Ä—Ç–∞:
                      </p>
                      <ul className="text-sm text-blue-700 mt-2 ml-4 list-disc">
                        <li><strong>&quot;–¢–æ–≤–∞—Ä—ã Ozon&quot;</strong> - –¥–ª—è CSV —Ñ–∞–π–ª–æ–≤ —Å –ª–∏—Å—Ç–æ–º &quot;–¢–æ–≤–∞—Ä—ã –∏ —Ü–µ–Ω—ã&quot;</li>
                        <li><strong>&quot;–ü–æ–ª–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã Ozon&quot;</strong> - –¥–ª—è Excel —Ñ–∞–π–ª–æ–≤ —Å –ª–∏—Å—Ç–∞–º–∏ &quot;–®–∞–±–ª–æ–Ω&quot;, &quot;–û–∑–æ–Ω.–í–∏–¥–µ–æ&quot;, &quot;–û–∑–æ–Ω.–í–∏–¥–µ–æ–æ–±–ª–æ–∂–∫–∞&quot;</li>
                      </ul>
                      <p className="text-sm text-blue-700 mt-2">
                        –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∫–æ–¥–∏—Ä–æ–≤–∫–∏ (UTF-8) –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π.
                      </p>
                    </div>
                  </div>
                </div>
                {renderReportCards(REPORT_TYPES.ozon)}
              </div>
            )}

            {activeTab === 'wildberries' && (
              <div className="space-y-6">
                <div className="border-l-4 border-purple-400 bg-purple-50 p-4">
                  <div className="flex">
                    <div className="flex-shrink-0">
                      <svg className="h-5 w-5 text-purple-400" viewBox="0 0 20 20" fill="currentColor">
                        <path fillRule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clipRule="evenodd" />
                      </svg>
                    </div>
                    <div className="ml-3">
                      <p className="text-sm text-purple-700">
                        <strong>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ Wildberries:</strong> –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –æ—Ç—á–µ—Ç—ã –º–æ–≥—É—Ç —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤. 
                        –ó–∞–≥—Ä—É–∂–∞–π—Ç–µ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.
                      </p>
                    </div>
                  </div>
                </div>
                {renderReportCards(REPORT_TYPES.wildberries)}
              </div>
            )}
          </Tabs>
        </div>

        {/* Footer with Instructions */}
        <div className="mt-8 bg-gray-50 rounded-lg p-6">
          <h3 className="text-lg font-medium text-gray-900 mb-4">
            –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–≥—Ä—É–∑–∫–µ
          </h3>
          <div className="grid md:grid-cols-2 gap-6">
            <div>
              <h4 className="font-medium text-gray-800 mb-2">–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:</h4>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>‚Ä¢ <strong>CSV —Ñ–∞–π–ª—ã:</strong> —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º &quot;;&quot; –∏–ª–∏ &quot;,&quot; (UTF-8)</li>
                <li>‚Ä¢ <strong>Excel —Ñ–∞–π–ª—ã:</strong> —Ñ–æ—Ä–º–∞—Ç .xlsx</li>
                <li>‚Ä¢ <strong>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä:</strong> 500 –ú–ë –Ω–∞ —Ñ–∞–π–ª</li>
                <li>‚Ä¢ <strong>–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞:</strong> –¥–æ 10 —Ñ–∞–π–ª–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ</li>
              </ul>
            </div>
            <div>
              <h4 className="font-medium text-gray-800 mb-2">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h4>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π</li>
                <li>‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤</li>
                <li>‚Ä¢ –§–∞–π–ª—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ</li>
                <li>‚Ä¢ –ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
      
      {/* Toast Container for notifications */}
      <ToastContainer />
    </Layout>
  )
}